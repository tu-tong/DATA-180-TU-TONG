Vans93
Vans_Euclidean <- as.matrix(dist(Vans93[,-1]))
colnames(Vans_Euclidean)<-Vans93[,1]
rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean <- round(Vans_Euclidean,2)
Vans_Euclidean
Vans_Manhattan <- as.matrix(dist(Vans93[,-1], method = "manhattan"))
colnames(Vans_Manhattan)<-Vans93[,1]
rownames(Vans_Manhattan)<-Vans93[,1]
Vans_Manhattan
D <- matrix(c(0,1,9,2,1.6,8,1,0,3,6,9,4,9,3,0,5,10,3,2,6,5,0,2,7.5,1.6,9,10,2,0,5.5,8,4,3,7.5,5.5,0),nrow=6,byrow = T)
print(D)
vertebrate <- read.csv("/Users/tu/Desktop/DATA180-Tu/hw5/vertebrate.csv")
nrow(vertebrate)
vertebrate
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,8]
rownames(Ver_Euclidean)<-vertebrate[,8]
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7], method = "manhattan"))
colnames(Ver_Manhattan)<-vertebrate[,8]
rownames(Ver_Manhattan)<-vertebrate[,8]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
install.packages("ggdendro")
library(ggdendro)
ggdendrogram(Ver_Euclidean) +
labs(title="Clustered vertebrates, Euclidean, Complete linkage")
install.packages("ggdendro")
library(ggdendro)
ggdendrogram(Ver_Euclidean) +
labs(titlev= "Clustered vertebrates, Euclidean, Complete linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
ggdendrogram(Ver_Euclidean) + labs(titlev= "Clustered vertebrates, Euclidean, Complete linkage")
install.packages("ggdendro")
library(ggdendro)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean, Complete linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
ggdendrogram(Ver_Euclidean)
ggdendrogram(Ver_Manhattan, lwd=3, title="Clustered vertebrates, Manhattan, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
ggdendrogram(Ver_Euclidean)
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan, Single linkage")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean)
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", sub="", xlab="Vertebrates", cex.lab=1.25, hang=-1)
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", xlab="Vertebrates", cex.lab=1.25, hang=-1)
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", xlab="Vertebrates", cex.lab=1.25, hang=-1)
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3, cex.lab=1.25, hang=-1) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", xlab="Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3, cex.lab=1.25, hang=-1) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", xlab="Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3, cex.lab=1.25, hang=-1, , xlab="Vertebrates") + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3, cex.lab=1.25, hang=-1, xlab="Vertebrates") + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3, cex.lab=1.25, hang=-1) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", x= "Vertebrates)
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3, cex.lab=1.25, hang=-1) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", x= "Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean, lwd=3, cex.lab=1.25, hang=-1) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", xlab= "Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", xlab= "Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage") + xlab("Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", x= "Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
#Find clusters in the data
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
cutree(Cluster_Ex_HC,k=3)
# Find different number of clusters within the data
Cluster_Ex<-data.frame(Cluster_Ex,cutree(Cluster_Ex_HC,k=c(3,4,5)))
names(Cluster_Ex)
names(Cluster_Ex)<-c("X","X1","X2","k_3","k_4","k_5")
head(Cluster_Ex)
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex_clusters.csv")
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
Cluster_Ex_HC
plot(Cluster_Ex_HC,cex=.75,xlab="")
#Manhattan Distance, method = single
Cluster_Ex_HC<-hclust(dist(Cluster_Ex,method="manhattan"),method="single")
plot(Ver_Euclidean, lwd = 3, title ="Clustered vertebrates, Euclidean metric, Complete linkage", cex.lab=1.25,xlab="Vertebrates")
plot(Ver_Euclidean, lwd = 3, title ="Clustered vertebrates, Euclidean metric, Complete linkage", cex.lab=1.25, xlab="Vertebrates")
plot(Ver_Euclidean, lwd = 3, main ="Clustered vertebrates, Euclidean metric, Complete linkage", sub= "", cex.lab=1.25, xlab="Vertebrates")
plot(Ver_Euclidean, lwd = 3, main ="Clustered vertebrates, Euclidean metric, Complete linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
plot(Ver_Euclidean, lwd = 3, main ="Clustered vertebrates, Euclidean metric, Complete linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
plot(Ver_Manhattan, lwd = 3, main ="Clustered vertebrates, Manhattan metric, Single linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage") +xlabel("Vertebrates")
install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", x = "Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
print(X)
D <- matrix(c(0,1,9,2,1.6,8,1,0,3,6,9,4,9,3,0,5,10,3,2,6,5,0,2,7.5,1.6,9,10,2,0,5.5,8,4,3,7.5,5.5,0),nrow=6,byrow = T)
print(D)
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7], method = "manhattan"))
colnames(Ver_Manhattan)<-vertebrate[,8]
rownames(Ver_Manhattan)<-vertebrate[,8]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7], method = "manhattan"))
colnames(Ver_Manhattan)<-vertebrate[,1]
rownames(Ver_Manhattan)<-vertebrate[,1]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean <- round(Ver_Euclidean, 2)
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean <- round(Ver_Euclidean, 2)
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean <- round(Ver_Euclidean, 2)
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean <- round(Ver_Euclidean, 2)
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
plot(Ver_Euclidean, lwd = 3, main ="Clustered vertebrates, Euclidean metric, Complete linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
plot(Ver_Manhattan, lwd = 3, main ="Clustered vertebrates, Manhattan metric, Single linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
plot(Ver_Euclidean, lwd = 3, main ="Clustered vertebrates, Euclidean metric, Complete linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
plot(Ver_Manhattan, lwd = 3, main ="Clustered vertebrates, Manhattan metric, Single linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
vertebrate <- read.csv("/Users/tu/Desktop/DATA180-Tu/hw5/vertebrate.csv")
nrow(vertebrate)
vertebrate
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Manhattan)<-vertebrate[,1]
rownames(Ver_Manhattan)<-vertebrate[,1]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7], method = "manhattan"))
colnames(Ver_Manhattan)<-vertebrate[,1]
rownames(Ver_Manhattan)<-vertebrate[,1]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Manhattan)<-vertebrate[,1]
rownames(Ver_Manhattan)<-vertebrate[,1]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7], method = "manhattan"))
colnames(Ver_Manhattan)<-vertebrate[,1]
rownames(Ver_Manhattan)<-vertebrate[,1]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
Vans_Euclidean <- as.matrix(dist(Vans93[,-1]))
colnames(Vans_Euclidean)<-Vans93[,1]
rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean <- round(Vans_Euclidean,2)
Vans_Euclidean <- hclust(dist(Vans93[,-1]))
plot(Vans_Euclidean)
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
Cluster_Ex_HC
plot(Cluster_Ex_HC,cex=.75,xlab="")
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-as.matrix(dist(Cluster_Ex))
Cluster_Ex_HC
Vans_Euclidean <- as.matrix(dist(Vans93[,-1]))
colnames(Vans_Euclidean)<-Vans93[,1]
rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean <- round(Vans_Euclidean,2)
Vans_Euclidean
X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
print(X)
library(MASS)
library(dplyr)
#head(Cars93)
Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, EngineSize, Horsepower, MPG.highway, Length)
Vans93
Vans_Euclidean <- as.matrix(dist(Vans93[,-1]))
colnames(Vans_Euclidean)<-Vans93[,1]
rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean <- round(Vans_Euclidean,2)
Vans_Euclidean
Vans_Manhattan <- as.matrix(dist(Vans93[,-1], method = "manhattan"))
colnames(Vans_Manhattan)<-Vans93[,1]
rownames(Vans_Manhattan)<-Vans93[,1]
Vans_Manhattan
D <- matrix(c(0,1,9,2,1.6,8,1,0,3,6,9,4,9,3,0,5,10,3,2,6,5,0,2,7.5,1.6,9,10,2,0,5.5,8,4,3,7.5,5.5,0),nrow=6,byrow = T)
print(D)
vertebrate <- read.csv("/Users/tu/Desktop/DATA180-Tu/hw5/vertebrate.csv")
nrow(vertebrate)
vertebrate
Ver_Euclidean<-as.matrix(dist(vertebrate[2:7]))
colnames(Ver_Euclidean)<-vertebrate[,1]
rownames(Ver_Euclidean)<-vertebrate[,1]
Ver_Euclidean <- round(Ver_Euclidean, 2)
Ver_Euclidean
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
Ver_Euclidean
Ver_Manhattan<-as.matrix(dist(vertebrate[2:7], method = "manhattan"))
colnames(Ver_Manhattan)<-vertebrate[,1]
rownames(Ver_Manhattan)<-vertebrate[,1]
Ver_Manhattan
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
Ver_Manhattan
plot(Ver_Euclidean, lwd = 3, main ="Clustered vertebrates, Euclidean metric, Complete linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
plot(Ver_Manhattan, lwd = 3, main ="Clustered vertebrates, Manhattan metric, Single linkage", sub= "", cex.lab=1.25, xlab="Vertebrates", hang = -1)
library(ggdendro)
library(ggplot2)
ggdendrogram(Ver_Euclidean) + labs(title= "Clustered vertebrates, Euclidean metric, Complete linkage", x = "Vertebrates")
ggdendrogram(Ver_Manhattan) + labs(title="Clustered vertebrates, Manhattan metric, Single linkage")
# Chunk 1
# Custom options for knitting
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = "center",
cache = FALSE
)
# Chunk 2
setwd("/Users/tu/Desktop/DATA180-Tu/hw7")
#library(tidyverse)
library(tm)
news<-read.csv("news.csv",header=T)
# Chunk 3
posWords <- scan("positive-words.txt", character(0), sep = "\n")  # 2006 items
negWords <- scan("negative-words.txt", character(0), sep = "\n")  # 4783 items
head(posWords,15)
head(negWords,15)
# Chunk 4
library(dplyr)
n_distinct(news$year)
# Chunk 5
charVector <- scan("news.csv", character(0), sep = "\n")
head(charVector)
# Chunk 6
wordVector <- VectorSource(charVector)
class(wordVector); typeof(wordVector); length(wordVector)
wordCorpus <- Corpus(wordVector)
class(wordCorpus); typeof(wordCorpus); length(wordCorpus)
# Chunk 7
wordCorpus <- tm_map(wordCorpus, content_transformer(tolower))
wordCorpus <- tm_map(wordCorpus, removePunctuation)
wordCorpus <- tm_map(wordCorpus, removeNumbers)
wordCorpus <- tm_map(wordCorpus, removeWords, stopwords("english"))
wordCorpus[["1"]][["content"]] #check after trimming
wordVector[1]
# Chunk 8
tdm <- TermDocumentMatrix(wordCorpus)
tdm
# Chunk 9
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing = TRUE)
head(wordCounts, 10)
totalWords <- sum(wordCounts)
# Chunk 10
barplot(wordCounts[wordCounts>50], las=2, cex.names=0.75)
# Chunk 11
matchedP <- match(names(wordCounts), posWords, nomatch=0)
matchedP <- wordCounts[matchedP != 0]
sum(matchedP)/totalWords
barplot(matchedP[matchedP>=20])
matchedN <- match(names(wordCounts), negWords, nomatch=0)
matchedN <- wordCounts[matchedN != 0]
sum(matchedN)/totalWords
barplot(matchedN[matchedN>=20])
# Chunk 12
news <- news %>% group_by(year,month) %>% mutate(count=n(), yearmonth = paste(year, month,sep = '/')) %>% arrange(year,month,day)
# Chunk 13
# Chunk 14
library("quanteda")
library('corpus')
library("ggplot2")
news <- news %>%
mutate(Time = with(., sprintf("%d-%02d", year, month))
news
library("ggplot2")
news <- news %>%
mutate(Time = with(., sprintf("%d-%02d", year, month))
news
library("ggplot2")
news <- news %>%
mutate(Time = with(., sprintf("%d-%02d", year, month)))
library("ggplot2")
news <- news %>%
mutate(Time = year + month)
news
ggpplot(news, aes(x=, y=)) +
geom_bar() +
theme(axis.text=element_text(size=4, angle=90))
library("quanteda")
library('corpus')
install.packages("corpus")
library("quanteda")
library('corpus')
install.packages(corpus)
library("quanteda")
library('corpus')
# Custom options for knitting
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = "center",
cache = FALSE
)
setwd("/Users/tu/Desktop/DATA180-Tu/hw7")
#library(tidyverse)
library(tm)
news<-read.csv("news.csv",header=T)
posWords <- scan("positive-words.txt", character(0), sep = "\n")  # 2006 items
negWords <- scan("negative-words.txt", character(0), sep = "\n")  # 4783 items
head(posWords,15)
head(negWords,15)
library(dplyr)
n_distinct(news$year)
charVector <- news$headline_text
head(charVector)
wordVector <- VectorSource(charVector)
class(wordVector); typeof(wordVector); length(wordVector)
wordCorpus <- Corpus(wordVector)
class(wordCorpus); typeof(wordCorpus); length(wordCorpus)
wordCorpus <- tm_map(wordCorpus, content_transformer(tolower))
wordCorpus <- tm_map(wordCorpus, removePunctuation)
wordCorpus <- tm_map(wordCorpus, removeNumbers)
wordCorpus <- tm_map(wordCorpus, removeWords, stopwords("english"))
wordCorpus[["1"]][["content"]] #check after trimming
wordVector[1]
tdm <- TermDocumentMatrix(wordCorpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing = TRUE)
head(wordCounts, 10)
totalWords <- sum(wordCounts)
barplot(wordCounts[wordCounts>=50], las=2, cex.names=0.75, xlab = "Word", ylab = "Frequency")
#positive
matchedP <- match(names(wordCounts), posWords, nomatch=0)
matchedP <- wordCounts[matchedP != 0]
sum(matchedP)/totalWords
barplot(matchedP[matchedP>=20])
#positive
matchedP <- match(names(wordCounts), posWords, nomatch=0)
matchedP <- wordCounts[matchedP != 0]
sum(matchedP)/totalWords
barplot(matchedP[matchedP>=20])
#negative
matchedN <- match(names(wordCounts), negWords, nomatch=0)
matchedN <- wordCounts[matchedN != 0]
sum(matchedN)/totalWords
barplot(matchedN[matchedN>=20], cex.names=0.75, cex = 0.75)
news <- news %>% group_by(year,month) %>% mutate(count=n(), yearmonth = paste(year, month,sep = '/')) %>% arrange(year,month,day)
news
library("ggplot2")
ggplot(news, aes(x=factor(yearmonth, levels=unique(yearmonth)))) +
geom_bar() +
xlab("Time") +
theme(axis.text=element_text(size=4, angle=90))
install.packages(corpus)
library("quanteda")
library('corpus')
install.packages(corpus)
library("quanteda")
library('corpus')
install.packages("corpus")
library("quanteda")
library('corpus')
install.packages("corpus")
library("quanteda")
library('corpus')
install.packages("corpus")
library("quanteda")
library('corpus')
install.packages("corpustools")
install.packages("corpus")
library("quanteda")
library('corpus')
#############
# Text Mining
# nomination speech
R.version.string
setwd("/Users/tu/Desktop/DATA180-Tu/Files for class 11_30_2023") # Set this to your local GitHub repository.
install.packages(corpus)
library("corpus")
# let's use corpus package, alternative to tm package
term_stats(charVector, ngrams = 1) # get term stats, for single word. Can change ngrams.
term_stats(charVector, ngrams = 1,filter = text_filter(drop_punct = TRUE, drop_symbol = TRUE, drop = stopwords_en))
install.packages("corpus")
library("quanteda")
library('corpus')
