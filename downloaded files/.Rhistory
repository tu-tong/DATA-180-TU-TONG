Cluster_Ex<-read.csv("D:/Dickinson College Teaching/DATA 180/data/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
source("~/Desktop/DATA180-Tu/downloaded files/hierachial clustering.R")
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex_clusters.csv")
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex.csv") #"Path where your data is goes here"
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
Cluster_Ex_HC
plot(Cluster_Ex_HC,cex=.75,xlab="")
#Manhattan Distance, method = single
Cluster_Ex_HC<-hclust(dist(Cluster_Ex,method="manhattan"),method="single")
Cluster_Ex_HC
plot(Cluster_Ex_HC,cex=.75,xlab="")
#Find clusters in the data
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
cutree(Cluster_Ex_HC,k=3)
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex_clusters.csv")
#plot the clusters
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4),ylim=c(0,4),cex.axis=1.3,cex.lab=1.2,cex=1.2,pch=15+k_3,col=k_3)
plot(Cluster_Ex_HC,cex=1.25,xlab="")
Cluster_Ex[c(12,30),]
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4),ylim=c(0,4),cex.axis=1.3, cex=1.4,cex.lab=1.2,pch=14+k_4,col=k_4)
Cluster_Ex_HC<-identify(Cluster_Ex)
plot(Cluster_Ex_HC,cex=1.25,xlab="")
#using the ggdendro package
install(ggdendro)
library(ggdendro)
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
Cluster_Ex_HC
plot(Cluster_Ex_HC,cex=.75,xlab="")
#Manhattan Distance, method = single
Cluster_Ex_HC<-hclust(dist(Cluster_Ex,method="manhattan"),method="single")
Cluster_Ex_HC
plot(Cluster_Ex_HC,cex=.75,xlab="")
#Find clusters in the data
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
cutree(Cluster_Ex_HC,k=3) #k=3 means 3 clusters
# Find different number of clusters within the data
Cluster_Ex<-data.frame(Cluster_Ex,cutree(Cluster_Ex_HC,k=c(3,4,5)))
names(Cluster_Ex)
names(Cluster_Ex)<-c("X","X1","X2","k_3","k_4","k_5")
head(Cluster_Ex)
Cluster_Ex<-read.csv("/Users/tu/Desktop/DATA180-Tu/downloaded files/Cluster_Ex_clusters.csv")
#plot the clusters
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4),ylim=c(0,4),cex.axis=1.3,cex.lab=1.2,cex=1.2,pch=15+k_3,col=k_3)
plot(Cluster_Ex_HC,cex=1.25,xlab="")
Cluster_Ex[c(12,30),]
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4),ylim=c(0,4),cex.axis=1.3, cex=1.4,cex.lab=1.2,pch=14+k_4,col=k_4)
Cluster_Ex_HC<-identify(Cluster_Ex)
Test<- matrix(sample(1:20,12, replace = T), nrow=3, byrow = T)
Test # This matrix will be different every time you run the line 3.
apply(Test,1,mean)
apply(Test,2,mean)
apply(Test,2,sd)
Test<- matrix(sample(1:20,12, replace = T), nrow=3, byrow = T)
Test # This matrix will be different every time you run the line 3.
apply(Test,c(1,2),mean)
apply(Test,2,mean)
v1<-c(2,6,4,1)
v2<-c(21,34,55,11)
v3<-c(75,50,100,80)
Data_M<-data.frame(v1,v2,v3)
Data_M
apply(Data_M,2,mean)
Data_M_scaled<-scale(Data_M)
Data_M_scaled
Data_M_scaled<-scale(Data_M)
Data_M_scaled
apply(Data_M,2,sd)
rng<-apply(Data_M,2,max)-apply(Data_M,2,min)
rng
scale(Data_M, center = F, scale=rng)
data(planets)
install.packages("planets")
library(planets)
data(planet)
data(planets)
